{"mappings":"kBAIaA,EAAQC,GAAaC,SAASC,iBAAiBF,GCF5DC,SAASE,cAAc,cAAcC,OAAS,KDiDXC,CAAAA,cACtBC,KAAOD,EAChBN,EAAKO,GAAKC,SAASC,IA3CK,IAC1BC,EACAC,EACAC,EAFAF,EA2CiBD,EA1CjBE,EA0CqBD,GAAQA,EAAIG,UAAUC,IAAIR,EAAKC,IAvC9CQ,IAASC,sBAAqB,CAACC,EAASF,KAC5CE,EAAQT,SAASU,IACXA,EAAMC,gBACRR,EAAuBO,EAAME,QACxBR,GAAyBG,EAAGM,cACxBT,GACTA,EAAwBM,EAAME,cAIjCE,QAAQZ,wBCrBS,0BACD,yBACD,YD2BlBa,OAAOC,iBAAiB,UAAU,KAC5BD,OAAOE,QAAUF,OAAOG,aACrBH,OAAOI,aACV3B,EAAK,OAAO,GAAG4B,MAAMC,UAAY,oBACjCN,OAAOI,YAAa,GAEbJ,OAAOI,aAChB3B,EAAK,OAAO,GAAG4B,MAAMC,UAAY,gBACjCN,OAAOI,YAAa,GAEtBJ,OAAOG,aAAeH,OAAOE","sources":["./src/scripts/dom_utils.js","./src/scripts/index.js"],"sourcesContent":["// dom{{{\n//==============================================================================\n//                              Select Dom\n//==============================================================================\nexport const doms = (selector) => document.querySelectorAll(selector);\n/*}}}*/\n// observer dom{{{\n//==============================================================================\n//                              Observer Dom\n//==============================================================================\nexport const observer_dom = (\n  dom,\n  action_is_intersecting,\n  action_not_intersecting\n) => {\n  const io = new IntersectionObserver((entries, io) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        action_is_intersecting(entry.target);\n        if (!action_not_intersecting) io.disconnect();\n      } else if (action_not_intersecting) {\n        action_not_intersecting(entry.target);\n      }\n    });\n  });\n  io.observe(dom);\n};\n/*}}}*/\n// toggle navigation on_scroll{{{\n//==============================================================================\n//                       Toggle Navigation on Scroll\n//==============================================================================\nexport const toggle_navigation_on_scroll = () => {\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > window.position_old) {\n      if (!window.nav_hidden) {\n        doms('nav')[0].style.transform = 'translateY(-100%)';\n        window.nav_hidden = true;\n      }\n    } else if (window.nav_hidden) {\n      doms('nav')[0].style.transform = 'translateY(0)';\n      window.nav_hidden = false;\n    }\n    window.position_old = window.scrollY;\n  });\n};\n/*}}}*/\n// add class on focus{{{\n//==============================================================================\n//                              Add Class on Focus\n//==============================================================================\nexport const add_class_on_focus = (list) => {\n  for (const key in list) {\n    doms(key).forEach((d) => {\n      observer_dom(d, (dom) => dom.classList.add(list[key]));\n    });\n  }\n}; //\n/*}}}*/\n","import { add_class_on_focus, toggle_navigation_on_scroll } from './dom_utils'\n\ndocument.querySelector('#intro img').onload = () => {\n  add_class_on_focus({\n    ['.moved_right']: 'move_back',\n    ['.moved_left']: 'move_back',\n    ['.faded_out']: 'fade_in',\n  });\n  toggle_navigation_on_scroll()\n}\n"],"names":["$dac5a3cd4dd5ddb2df051b1c531c4e98$export$doms","selector","document","querySelectorAll","querySelector","onload","list","key","forEach","d","dom","action_is_intersecting","action_not_intersecting","classList","add","io","IntersectionObserver","entries","entry","isIntersecting","target","disconnect","observe","window","addEventListener","scrollY","position_old","nav_hidden","style","transform"],"version":3,"file":"index.fc7da12a.js.map"}